// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      {
        "flex": 1,
      },
    ]
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <RNSScreenStack
      style={
        {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        collapsable={false}
        fullScreenSwipeShadowEnabled={false}
        gestureResponseDistance={
          {
            "bottom": -1,
            "end": -1,
            "start": -1,
            "top": -1,
          }
        }
        hasLargeHeader={false}
        nativeBackButtonDismissalEnabled={false}
        onAppear={[Function]}
        onDisappear={[Function]}
        onDismissed={[Function]}
        onGestureCancel={[Function]}
        onHeaderBackButtonClicked={[Function]}
        onNativeDismissCancelled={[Function]}
        onTransitionProgress={[Function]}
        onWillAppear={[Function]}
        onWillDisappear={[Function]}
        replaceAnimation="push"
        sheetAllowedDetents="large"
        sheetCornerRadius={-1}
        sheetExpandsWhenScrolledToEdge={true}
        sheetGrabberVisible={false}
        sheetLargestUndimmedDetent="all"
        stackPresentation="push"
        style={
          {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        swipeDirection="horizontal"
      >
        <View
          accessibilityElementsHidden={false}
          importantForAccessibility="auto"
          style={
            {
              "flex": 1,
              "flexDirection": "column-reverse",
            }
          }
        >
          <View
            collapsable={false}
            style={
              [
                {
                  "flex": 1,
                },
                {
                  "backgroundColor": "rgb(242, 242, 242)",
                },
                undefined,
              ]
            }
          >
            <RNCSafeAreaView
              edges={
                {
                  "bottom": "additive",
                  "left": "additive",
                  "right": "additive",
                  "top": "additive",
                }
              }
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "gap": 10,
                  "justifyContent": "center",
                  "padding": 20,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#38B3E3",
                    "borderRadius": 16,
                    "flexDirection": "row",
                    "gap": 10,
                    "height": 65,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 10,
                    "width": "100%",
                  }
                }
                testID="TaskButton"
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#000000",
                        "fontSize": 20,
                      },
                      undefined,
                      {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
                <Text
                  style={
                    {
                      "color": "#000000",
                      "fontSize": 20,
                    }
                  }
                >
                  Task
                </Text>
              </View>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "alignItems": "center",
                    "backgroundColor": "#38B3E3",
                    "borderRadius": 16,
                    "flexDirection": "row",
                    "gap": 10,
                    "height": 65,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 10,
                    "width": "100%",
                  }
                }
                testID="ListButton"
              >
                <Text
                  allowFontScaling={false}
                  selectable={false}
                  style={
                    [
                      {
                        "color": "#000000",
                        "fontSize": 20,
                      },
                      undefined,
                      {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      {},
                    ]
                  }
                >
                  
                </Text>
                <Text
                  style={
                    {
                      "color": "#000000",
                      "fontSize": 20,
                    }
                  }
                >
                  List
                </Text>
              </View>
            </RNCSafeAreaView>
          </View>
        </View>
        <RNSScreenStackHeaderConfig
          backButtonInCustomView={false}
          backTitleVisible={true}
          backgroundColor="rgb(255, 255, 255)"
          color="rgb(0, 122, 255)"
          direction="ltr"
          disableBackButtonMenu={false}
          hidden={true}
          hideBackButton={false}
          largeTitleHideShadow={false}
          title="Home"
          titleColor="rgb(28, 28, 30)"
          topInsetEnabled={false}
          translucent={false}
        />
      </RNSScreen>
    </RNSScreenStack>
  </View>
</RNCSafeAreaProvider>
`;
